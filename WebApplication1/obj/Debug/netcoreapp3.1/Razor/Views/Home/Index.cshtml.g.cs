#pragma checksum "D:\Coding\asp\WebApplication1\WebApplication1\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3da6b489e110f8fdb7e2bafde80f4cc93bbe3c7e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Coding\asp\WebApplication1\WebApplication1\Views\_ViewImports.cshtml"
using WebApplication1;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Coding\asp\WebApplication1\WebApplication1\Views\_ViewImports.cshtml"
using WebApplication1.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3da6b489e110f8fdb7e2bafde80f4cc93bbe3c7e", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"729efaa87342638aecfe1a972ce9f9f8dff55b4c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Coding\asp\WebApplication1\WebApplication1\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Calculator Ajax MVC</h1>
    <p>Calculator lab</p>
</div>

<section class=""container"">
    <div class=""row"">
        <div class=""col-md-4"">
        </div>
        <div class=""col-md-4 bg-dark rounded shadow"">
            <h1 id=""display"" class=""display-4 pt-5 text-right text-white"">0</h1>
            <div class=""row pt-3"">
                <div class=""col-md-3 pr-1"">
                    <button id=""cancel"" type=""button"" class=""btn btn-info btn-block"">C</button>
                </div>
                <div class=""col-md-3 px-1"">
                    <button id=""del"" type=""button"" class=""btn btn-info btn-block"">Del</button>
                </div>
                <div class=""col-md-3 px-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-info btn-block"">%</button>
                </div>
                <div class=""col-md-3 pl-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-info btn-block"">/</butto");
            WriteLiteral(@"n>
                </div>
            </div>
            <div class=""row py-2"">
                <div class=""col-md-3 pr-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-outline-light btn-block"">7</button>
                </div>
                <div class=""col-md-3 px-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-outline-light btn-block"">8</button>
                </div>
                <div class=""col-md-3 px-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-outline-light btn-block"">9</button>
                </div>
                <div class=""col-md-3 pl-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-info btn-block"">*</button>
                </div>
            </div>
            <div class=""row"">
                <div class=""col-md-3 pr-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-outline-light btn-block"">4</button>
                </div>
                <div class=""");
            WriteLiteral(@"col-md-3 px-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-outline-light btn-block"">5</button>
                </div>
                <div class=""col-md-3 px-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-outline-light btn-block"">6</button>
                </div>
                <div class=""col-md-3 pl-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-info btn-block"">-</button>
                </div>
            </div>
            <div class=""row py-2"">
                <div class=""col-md-3 pr-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-outline-light btn-block"">1</button>
                </div>
                <div class=""col-md-3 px-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-outline-light btn-block"">2</button>
                </div>
                <div class=""col-md-3 px-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-outline-light btn-bloc");
            WriteLiteral(@"k"">3</button>
                </div>
                <div class=""col-md-3 pl-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-info btn-block"">+</button>
                </div>
            </div>
            <div class=""row pb-3"">
                <div class=""col-md-6 pr-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-outline-light btn-block"">0</button>
                </div>
                <div class=""col-md-3 px-1"">
                    <button id=""mynum"" type=""button"" class=""btn btn-outline-light btn-block"">.</button>
                </div>
                <div class=""col-md-3 pl-1"">
                    <button id=""noone"" onclick=""ajax()"" type=""button"" class=""btn btn-info btn-block"">=</button>
                </div>
            </div>
        </div>
        <div class=""col-md-4"">
        </div>
    </div>
</section>

<script>
    let buttonNum = document.querySelectorAll(""#mynum"");
    buttonNum.forEach(buttonNum => {
        buttonNum.");
            WriteLiteral(@"addEventListener('click', () => addValue(buttonNum.innerHTML));
    });

    document.getElementById(""cancel"").addEventListener('click', cancel)
    document.getElementById(""del"").addEventListener('click', del)

    function ajax() {
        let text = document.getElementById('display');
        let xhttp = new XMLHttpRequest();
        let y = 0;
        for (x = 0; x < text.innerHTML.length; x++) {
            if (text.innerHTML.charAt(x) == ""+"" || text.innerHTML.charAt(x) == ""*"" || text.innerHTML.charAt(x) == ""/"" || text.innerHTML.charAt(x) == ""%""){
                y++;
                if (y > 1) {
                    text.innerHTML = ""Error"";
                }
            }
        }
        if (text.innerHTML.includes(""+"")) {
            let numArray = text.innerHTML.split(""+"")
            xhttp.open(""GET"", ""https://localhost:5001/Home/plusnumber?num1="" + numArray[0] + ""&num2="" + numArray[1])
            xhttp.send();
            xhttp.onload = function () {
                text.in");
            WriteLiteral(@"nerHTML = xhttp.responseText;
            };
        }
        else if (!!text.innerHTML.includes(""-"",0)) {
            let numArray = text.innerHTML.split(""-"")
            xhttp.open(""GET"", ""https://localhost:5001/Home/minusnumber?num1="" + numArray[0] + ""&num2="" + numArray[1])
            xhttp.send();
            xhttp.onload = function () {
                text.innerHTML = xhttp.responseText;
            };
        }
        else if (text.innerHTML.includes(""*"")) {
            let numArray = text.innerHTML.split(""*"")
            xhttp.open(""GET"", ""https://localhost:5001/Home/multiplynumber?num1="" + numArray[0] + ""&num2="" + numArray[1])
            xhttp.send();
            xhttp.onload = function () {
                text.innerHTML = xhttp.responseText;
            };
        }
        else if (text.innerHTML.includes(""/"")) {
            let numArray = text.innerHTML.split(""/"")
            xhttp.open(""GET"", ""https://localhost:5001/Home/dividenumber?num1="" + numArray[0] + ""&num2="" + num");
            WriteLiteral(@"Array[1])
            xhttp.send();
            xhttp.onload = function () {
                text.innerHTML = xhttp.responseText;
            };
        }

        else if (text.innerHTML.includes(""%"")) {
            let numArray = text.innerHTML.split(""%"")
            xhttp.open(""GET"", ""https://localhost:5001/Home/modnumber?num1="" + numArray[0] + ""&num2="" + numArray[1])
            xhttp.send();
            xhttp.onload = function () {
                text.innerHTML = xhttp.responseText;
            };
        }
    }

    function addValue(value) {
        let text = document.getElementById('display');
        let temp = 0;
        for (x = 0; x < text.length; x++) {
            if (y[x] == '=') {
                temp += 1;
                if (temp > 1) {
                    text.innerHTML -= value;
                }
            }
        }
        if (text.innerHTML == 0 || text.innerHTML == ""0"") {
            text.innerHTML = value;
        } else {
            text.innerHTM");
            WriteLiteral(@"L += value;
        }

    }

    function del() {
        var text = document.getElementById('display');
        text.innerHTML = text.innerHTML.toString().slice(0, -1);
        if (text.innerHTML == """")
            text.innerHTML = 0;
    }

    function cancel() {
        document.getElementById(""display"").innerHTML = 0;
    }

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
